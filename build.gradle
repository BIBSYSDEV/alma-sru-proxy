plugins {
    id 'java'
    id 'checkstyle'
    id 'pmd'
    id 'jacoco'
    id 'io.micronaut.application' version '3.0.1'
    id 'nebula.lint' version '17.5.0'
}

group 'no.sikt.alma'
version '1.0'

sourceCompatibility = JavaVersion.VERSION_11  // source-code version and must be <= targetCompatibility
targetCompatibility = JavaVersion.VERSION_11 // bytecode target version

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

micronaut {
    runtime("lambda")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("no.sikt.alma.*")
    }
}

dependencies {
    implementation group: 'io.micronaut', name: 'micronaut-runtime'
    implementation group: 'io.micronaut.problem', name: 'micronaut-problem-json'
    implementation group: 'io.micronaut', name: 'micronaut-validation'
    implementation group: 'javax.annotation', name: 'javax.annotation-api'
    implementation group: 'com.google.guava', name: 'guava', version: '31.0.1-jre'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    implementation group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1.1'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'
    implementation group: 'org.marc4j', name: 'marc4j', version: '2.9.2'
    implementation group: 'com.amazonaws', name: 'aws-lambda-java-events', version: '3.11.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'
    implementation group: 'com.github.BIBSYSDEV', name: 'marc21-xml-parser', version: '2.11.5'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'com.github.bibsysdev', name: 'core', version: '1.16.30'
    implementation ('org.apache.logging.log4j:log4j-core') { version { strictly '2.17.0' }}
    runtimeOnly("ch.qos.logback:logback-classic")
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.2.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.8.2'
    testImplementation group: 'io.micronaut', name: 'micronaut-http-client'
    compileOnly group: 'org.graalvm.nativeimage', name: 'svm'
}

application {
    mainClass.set("no.sikt.nva.Application")
}

test {
    useJUnitPlatform()
    failFast = true
    finalizedBy jacocoTestReport
}

pmd {
    ruleSetConfig = rootProject.resources.text.fromFile('config/pmd/ruleset.xml')
    ruleSets = []
    ignoreFailures = false
}

checkstyle {
    configFile = rootProject.resources.text.fromFile('config/checkstyle/checkstyle.xml').asFile()
    showViolations = true
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet rootProject.resources.text.fromFile('config/checkstyle/checkstyle-simple.xsl')
    }
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/reports/jacoco")
    }
}

check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.dependsOn(jacocoTestReport)

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.090
            }
        }

        rule {
            limit {
                counter = 'CLASS'
                value = 'COVEREDRATIO'
                minimum = 0.5
            }
        }
    }
}

