AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS

  Sample SAM Template for AWS

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20
  Api:
    Cors:
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowMethods: "'OPTIONS, GET'"
      AllowOrigin: "'*'"


Parameters:
  CognitoAuthorizerArn:
    Default: '{{resolve:ssm:CognitoAuthorizerArn:2}}'
    Type: String
    Description: Reference to Cognito UserPool for the stage
  CustomDomain:
    Type: String
    Description: Custom API to connect this lambda to
  CustomDomainBasePath:
    Type: String
    Description: Base path mapping in CustomDomain
  AlmaSruHost:
    Type: String
    Description: Address to Alma-SRU
    Default: '{{resolve:ssm:almaSruHost:1}}'

Resources:

  NvaAlmaSruProxyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        Authorizers:
          MyCognitoAuthorizer:
            UserPoolArn: !Ref CognitoAuthorizerArn
      EndpointConfiguration: Regional
      DefinitionBody:
        openapi: 3.0.0
        info:
          title: NVA Alma SRU Proxy
          version: '1.0'
        paths:
          /:
            get:
              summary:  Fetch most recent publication to an author given by creatorname and authorityID (scn)
              description:  Fetches a publication title by creatorname and authorityID (scn)
              parameters:
                - in: query
                  name: scn
                  required: true
                  type: string
                  description: systemControlNumber (scn).
                - in: query
                  name: creatorname
                  required: true
                  type: string
                  description: authors name (inverted).
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NvaFetchAlmaRecordFunction.Arn}/invocations
                responses: {}
                httpMethod: POST
                type: AWS_PROXY
              responses:
                '200':
                  description: title
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/fetchAlmaRecordResponseBody'
                '400':
                  description: Bad request.
                  content:
                    application/json:
                      schema:
                        title: 400 Bad request
                        type: object
                        properties:
                          error:
                            type: string
                            description: error message
                '500':
                  description: Internal server error.
                  content:
                    application/json:
                      schema:
                        title: 500 internal server error
                        type: object
                        properties:
                          error:
                            type: string
                            description: error message

        components:
          securitySchemes:
            CognitoUserPool:
              type: apiKey
              name: Authorization
              in: header
              x-amazon-apigateway-authtype: cognito_user_pools
              x-amazon-apigateway-authorizer:
                type: cognito_user_pools
                providerARNs:
                  - !Ref CognitoAuthorizerArn
          schemas:
            fetchAlmaRecordResponseBody:
              title: publication (alma record)
              type: object
              properties:
                title:
                  type: string
                  description: title of the publication in Alma

  NvaFetchAlmaRecordFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables:
          ALMA_SRU_HOST: !Ref AlmaSruHost
          ALLOWED_ORIGIN:  '*'
      Handler: no.unit.nva.alma.FetchAlmaRecordHandler::handleRequest
      Runtime: java8
      MemorySize: 512
      Events:
        NvaFetchAlmaRecordEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref NvaAlmaSruProxyApi
            Method: get
            Path: /


  NvaAlmaSruProxyBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      BasePath: !Ref CustomDomainBasePath
      DomainName: !Ref CustomDomain
      RestApiId: !Ref NvaAlmaSruProxyApi
      Stage: !Ref NvaAlmaSruProxyApi.Stage
