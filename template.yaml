AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sets up lambda, api and base path mapping to fetch most recent publication for an author

Parameters:
  CustomDomain:
    Type: AWS::SSM::Parameter::Value<String>
    Default: '/api/domainName'
    Description: (Optional) Custom domain name for the API endpoint
  CustomDomainBasePath:
    Type: String
    Default: 'alma'
    Description: (Optional) Base path mapping in CustomDomain
    AllowedPattern: "^[a-zA-Z0-9$\\-_.+!*'(),]*$"
    ConstraintDescription: "May contain only letters, numbers and one of $-_.+!*'(),"
  SruEndpoint:
    Type: AWS::SSM::Parameter::Value<String>
    Default: '/alma/sruEndpoint'
    Description: Url Endpoint to the SRU server

Conditions:
  HasDomainName: !Not [!Equals [!Ref CustomDomain, '']]
  HasCustomDomainBasePath: !Not [!Equals [!Ref CustomDomainBasePath, '']]

Globals:
  Function:
    Timeout: 20
  Api:
    Cors:
      AllowHeaders: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
      AllowMethods: '''OPTIONS, GET'''
      AllowOrigin: '''*'''
    EndpointConfiguration: REGIONAL

Resources:

  AlmaSruProxyApi:
    Type: AWS::Serverless::Api
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W64
            reason: "Skip access logging for artifacts bucket"
          - id: W68
            reason: "Skip encryption for artifacts bucket"
          - id: W69
            reason: "Skip bucket policy for artifacts bucket"
          - id: W89
            reason: "Lambda functions should be deployed inside a VPC"
          - id: W92
            reason: "Lambda functions should define ReservedConcurrentExecutions to reserve simultaneous executions"
    Properties:
      Name: !Sub "${AWS::StackName}"
      StageName: v1
      EndpointConfiguration:
        Type: REGIONAL
      DefinitionBody:
        openapi: 3.0.3
        info:
          title: Alma SRU Proxy
          version: '1.0'
        paths:
          /:
            get:
              summary:  Get Alma record given by mms_id and optional institution
              description:  gets the Alma record by mms_id
              consumes:
                - application/json
              produces:
                - application/json
              parameters:
                - in: query
                  name: mms_id
                  required: false
                  type: string
                  description: mms_id.
                - in: query
                  name: institution
                  required: false
                  type: string
                  description: institution (alma_code).
                - in: query
                  name: isbn
                  required: false
                  type: string
                  description: isbn.
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetAlmaSruRecordFunction.Arn}/invocations
                responses: {}
                httpMethod: POST
                type: AWS_PROXY
              responses:
                '200':
                  description: alma record
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/getAlmaSruRecordResponseBody'
                '400':
                  description: Bad request.
                  content:
                    application/json:
                      schema:
                        title: 400 Bad request
                        type: object
                        properties:
                          error:
                            type: string
                            description: error message
                '500':
                  description: Internal server error.
                  content:
                    application/json:
                      schema:
                        title: 500 internal server error
                        type: object
                        properties:
                          error:
                            type: string
                            description: error message

        components:
          schemas:
            getAlmaSruRecordResponseBody:
              title: alma record
              type: object
              properties:
                title:
                  type: string
                  description: bibliographic record from Alma

  GetAlmaSruRecordFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables:
          ALLOWED_ORIGIN:  '*'
          ALMA_SRU_HOST: !Ref SruEndpoint
      Handler: Provided
      Runtime: provided
      MemorySize: 1024
      Description: alma sru proxy
      CodeUri: build/libs/alma-sru-proxy-1.0-lambda.zip
      Role: !GetAtt AlmaSruProxyExecutionRole.Arn
      Events:
        GetAlmaSruRecordEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref AlmaSruProxyApi
            Method: get
            Path: /

#  AlmaSruProxyExecutionRole:
#    Type: AWS::IAM::Role
#    Properties:
#      AssumeRolePolicyDocument:
#        Version: 2012-10-17
#        Statement:
#          - Effect: Allow
#            Principal:
#              Service: [lambda.amazonaws.com]
#            Action: ['sts:AssumeRole']
#      ManagedPolicyArns:
#        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
#
#  DefaultLambdaPermissions:
#    Type: AWS::IAM::Policy
#    Properties:
#      PolicyName: !Sub DefaultLambdaPermissions-${AWS::StackName}
#      Roles:
#        - !Ref AlmaSruProxyExecutionRole
#      PolicyDocument:
#        Version: '2012-10-17'
#        Statement:
#          - Effect: Allow
#            Action:
#              - logs:CreateLogGroup
#              - logs:CreateLogStream
#              - logs:PutLogEvents
#              - lambda:InvokeFunction
#            Resource: "*"

  AlmaSruProxyBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Condition: HasDomainName
    Properties:
      BasePath: !If
        - HasCustomDomainBasePath
        - !Ref CustomDomainBasePath
        - !Ref 'AWS::NoValue'
      DomainName: !Ref CustomDomain
      RestApiId: !Ref AlmaSruProxyApi
      Stage: !Ref AlmaSruProxyApi.Stage

Outputs:
  ApiEndpoint:
    Description: "Endpoint base URL for the API"
    Value: !If
      - HasDomainName
      - !Sub "https://${CustomDomain}/${CustomDomainBasePath}"
      - !Sub "https://${AlmaSruProxyApi}.execute-api.${AWS::Region}.amazonaws.com/${AlmaSruProxyApi.Stage}/"
